plugins {
    id 'com.android.library'
    id 'maven-publish'
}
apply from: rootProject.file('gradle/common.gradle')

android {
    defaultConfig {
        versionCode 1
        versionName "1.0"

        externalNativeBuild {
            cmake {
                abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
                arguments "-DANDROID_TOOLCHAIN=clang"
                cppFlags '-Wl,--gc-sections -fno-exceptions -fno-rtti -fvisibility=hidden'
                cFlags '-Wl,--gc-sections -fvisibility=hidden'
            }
        }

    }

    /*externalNativeBuild {
      cmake {
        path "src/main/cpp/xhook/CMakeLists.txt"
      }
    }*/

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            java.srcDirs = ['src/main/java']
            jniLibs.srcDir('src/main/libs')
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
}

// Because the components are created only during the afterEvaluate phase, you must
// configure your publications using the afterEvaluate() lifecycle method.
afterEvaluate {
    publishing {
        publications {
            // Creates a Maven publication called "release".
            release(MavenPublication) {
                // Applies the component for the release build variant.
                from components.release

                // You can then customize attributes of the publication as shown below.
                groupId = 'com.kwai.koom'
                artifactId = "xhook"
                version = '2.0.0'
            }
            // Creates a Maven publication called “debug”.
            debug(MavenPublication) {
                // Applies the component for the debug build variant.
                from components.debug

                groupId = 'com.kwai.koom'
                artifactId = "xhook"
                version = '2.0.0'
            }
        }
    }
}